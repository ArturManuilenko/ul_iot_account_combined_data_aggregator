"""empty message

Revision ID: 300ecde38cd2
Revises:
Create Date: 2021-10-29 08:11:18.384892

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '300ecde38cd2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('data_gateway',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_modified', sa.DateTime(), nullable=False),
    sa.Column('is_alive', sa.Boolean(), nullable=False),
    sa.Column('user_created_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_modified_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('name')
    )
    op.create_table('device_manufacturer',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_modified', sa.DateTime(), nullable=False),
    sa.Column('is_alive', sa.Boolean(), nullable=False),
    sa.Column('user_created_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_modified_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('name')
    )
    op.create_table('device_metering_type',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_modified', sa.DateTime(), nullable=False),
    sa.Column('is_alive', sa.Boolean(), nullable=False),
    sa.Column('user_created_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_modified_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('sys_name', sa.String(length=255), nullable=False),
    sa.Column('name_ru', sa.String(length=255), nullable=False),
    sa.Column('name_en', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('protocol',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_modified', sa.DateTime(), nullable=False),
    sa.Column('is_alive', sa.Boolean(), nullable=False),
    sa.Column('user_created_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_modified_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('name')
    )
    op.create_table('data_gateway_network',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_modified', sa.DateTime(), nullable=False),
    sa.Column('is_alive', sa.Boolean(), nullable=False),
    sa.Column('user_created_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_modified_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('type_network', sa.Enum('input', 'output', name='networktypeenum'), nullable=False),
    sa.Column('data_gateway_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['data_gateway_id'], ['data_gateway.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device_modification_type',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_modified', sa.DateTime(), nullable=False),
    sa.Column('is_alive', sa.Boolean(), nullable=False),
    sa.Column('user_created_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_modified_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('type', sa.Enum('smart_meter', 'modem', name='devicemodificationtypeenum'), nullable=False),
    sa.Column('metering_type_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('sys_name', sa.String(length=255), nullable=False),
    sa.Column('name_ru', sa.String(length=255), nullable=False),
    sa.Column('name_en', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['metering_type_id'], ['device_metering_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name_en'),
    sa.UniqueConstraint('name_en'),
    sa.UniqueConstraint('name_ru'),
    sa.UniqueConstraint('name_ru'),
    sa.UniqueConstraint('sys_name'),
    sa.UniqueConstraint('sys_name')
    )
    op.create_table('device_modification',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_modified', sa.DateTime(), nullable=False),
    sa.Column('is_alive', sa.Boolean(), nullable=False),
    sa.Column('user_created_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_modified_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('device_modification_type_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['device_modification_type_id'], ['device_modification_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_modified', sa.DateTime(), nullable=False),
    sa.Column('is_alive', sa.Boolean(), nullable=False),
    sa.Column('user_created_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_modified_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('manufacturer_serial_number', sa.String(length=255), nullable=False),
    sa.Column('date_produced', sa.DateTime(), nullable=True),
    sa.Column('device_modification_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('device_manufacturer_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('firmware_version', sa.String(length=255), nullable=True),
    sa.Column('hardware_version', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['device_manufacturer_id'], ['device_manufacturer.id'], ),
    sa.ForeignKeyConstraint(['device_modification_id'], ['device_modification.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('data_gateway_network_device',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_modified', sa.DateTime(), nullable=False),
    sa.Column('is_alive', sa.Boolean(), nullable=False),
    sa.Column('user_created_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_modified_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('mac', sa.Integer(), nullable=False),
    sa.Column('uplink_encryption_key', sa.String(length=255), nullable=True),
    sa.Column('downlink_encryption_key', sa.String(length=255), nullable=True),
    sa.Column('key_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('device_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('data_gateway_network_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('uplink_protocol_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('downlink_protocol_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['data_gateway_network_id'], ['data_gateway_network.id'], ),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
    sa.ForeignKeyConstraint(['downlink_protocol_id'], ['protocol.id'], ),
    sa.ForeignKeyConstraint(['uplink_protocol_id'], ['protocol.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('device_id', 'data_gateway_network_id', 'mac')
    )
    # ### end Alembic commands ###


def downgrade():
    op.drop_table('data_gateway_network_device')
    op.drop_table('device')
    op.drop_table('device_modification')
    op.drop_table('device_modification_type')
    op.drop_table('data_gateway_network')
    op.drop_table('protocol')
    op.drop_table('device_metering_type')
    op.drop_table('device_manufacturer')
    op.drop_table('data_gateway')
    op.execute('DROP TYPE networktypeenum;')
    op.execute('DROP TYPE devicemodificationtypeenum;')
